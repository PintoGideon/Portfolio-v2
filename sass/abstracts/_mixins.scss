@mixin underline(
	$bg: currentColor,
	$margin: $spacer,
	$height: 1px,
	$width: 25%
) {
	&::after {
		content: '';
		display: block;
		margin: $margin auto;
		background: $bg;
		height: $height;
		width: $width;
		@content;
	}
}

@mixin media-queries($size) {
	$value: map-get($breakpoints, $size);
	@media only screen and (min-width: $value) {
		@content;
	}
}

@mixin limit-width() {
	max-width: 450px;
	margin: 0 auto;
}

@mixin grid($cols: 3) {
	display: grid;
	grid: auto-flow/repeat($cols, 1fr);
	grid-gap: $spacer;
	max-width: 1200px;
}

@mixin easeOut {
	transition: all 0.5s ease-out;
}

/* For projects */
// Media Query Mixins

@mixin respond($breakpoint) {
	@if $breakpoint == phone {
		@media (max-width: 37.5em) {
			@content;
		}
	}
	@if $breakpoint == tab-port {
		@media (max-width: 56.25em) {
			@content;
		}
	}
	@if $breakpoint == tab-land {
		@media (max-width: 75em) {
			@content;
		}
	}
	@if $breakpoint == big-desktop {
		@media (min-width: 112.5em) {
			@content;
		}
	}
}

@mixin mediaSm {
	@media screen and (max-width: 500px) {
		@content;
	}
}

@mixin mediaMd {
	@media screen and (max-width: 768px) {
		@content;
	}
}

@mixin mediaLg {
	@media screen and (min-width: 769px) and (max-width: 1170px) {
		@content;
	}
}

@mixin mediaXl {
	@media screen and (min-width: 1171px) {
		@content;
	}
}
